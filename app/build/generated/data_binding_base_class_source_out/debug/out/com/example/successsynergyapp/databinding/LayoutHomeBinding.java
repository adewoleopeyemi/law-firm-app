// Generated by data binding compiler. Do not edit!
package com.example.successsynergyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager.widget.ViewPager;
import com.airbnb.lottie.LottieAnimationView;
import com.example.successsynergyapp.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import java.lang.Deprecated;
import java.lang.Object;
import me.relex.circleindicator.CircleIndicator;

public abstract class LayoutHomeBinding extends ViewDataBinding {
  @NonNull
  public final ViewPager adsViewPager;

  @NonNull
  public final RelativeLayout allRl;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final CircleIndicator indicator;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final LottieAnimationView loadingAnim;

  @NonNull
  public final LottieAnimationView noGeneralUsers;

  @NonNull
  public final LottieAnimationView noPopularUsersAnim;

  @NonNull
  public final RelativeLayout rlLoading;

  @NonNull
  public final RecyclerView rvAll;

  @NonNull
  public final RecyclerView rvPopular;

  @NonNull
  public final RecyclerView rvTopRated;

  @NonNull
  public final View selectedCategory;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final CollapsingToolbarLayout toolbarLayout;

  @NonNull
  public final TextView tvAllUsers;

  @NonNull
  public final TextView tvGeneral;

  @NonNull
  public final TextView tvPopular;

  @NonNull
  public final TextView tvSearchResults;

  @NonNull
  public final TextView tvTopRatedUsers;

  @NonNull
  public final ConstraintLayout userSelection;

  protected LayoutHomeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ViewPager adsViewPager, RelativeLayout allRl, AppBarLayout appBar, EditText etSearch,
      CircleIndicator indicator, ImageView ivBack, LinearLayout llMain,
      LottieAnimationView loadingAnim, LottieAnimationView noGeneralUsers,
      LottieAnimationView noPopularUsersAnim, RelativeLayout rlLoading, RecyclerView rvAll,
      RecyclerView rvPopular, RecyclerView rvTopRated, View selectedCategory, Toolbar toolbar,
      CollapsingToolbarLayout toolbarLayout, TextView tvAllUsers, TextView tvGeneral,
      TextView tvPopular, TextView tvSearchResults, TextView tvTopRatedUsers,
      ConstraintLayout userSelection) {
    super(_bindingComponent, _root, _localFieldCount);
    this.adsViewPager = adsViewPager;
    this.allRl = allRl;
    this.appBar = appBar;
    this.etSearch = etSearch;
    this.indicator = indicator;
    this.ivBack = ivBack;
    this.llMain = llMain;
    this.loadingAnim = loadingAnim;
    this.noGeneralUsers = noGeneralUsers;
    this.noPopularUsersAnim = noPopularUsersAnim;
    this.rlLoading = rlLoading;
    this.rvAll = rvAll;
    this.rvPopular = rvPopular;
    this.rvTopRated = rvTopRated;
    this.selectedCategory = selectedCategory;
    this.toolbar = toolbar;
    this.toolbarLayout = toolbarLayout;
    this.tvAllUsers = tvAllUsers;
    this.tvGeneral = tvGeneral;
    this.tvPopular = tvPopular;
    this.tvSearchResults = tvSearchResults;
    this.tvTopRatedUsers = tvTopRatedUsers;
    this.userSelection = userSelection;
  }

  @NonNull
  public static LayoutHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_home, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutHomeBinding>inflateInternal(inflater, R.layout.layout_home, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_home, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutHomeBinding>inflateInternal(inflater, R.layout.layout_home, null, false, component);
  }

  public static LayoutHomeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutHomeBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutHomeBinding)bind(component, view, R.layout.layout_home);
  }
}
